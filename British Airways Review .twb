<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='BritishAirwaysReview_17307322768870' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
        <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        <members>
          <member value='&quot;Overall Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Food&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Value&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='ba_reviews+' inline='true' name='federated.070npzo1bfnjkx13od5jm009zfwq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ba_reviews' name='textscan.0le9ljj0jr05zr1cp74kc06f4qvd'>
            <connection class='textscan' directory='/Users/alikamiloglu/Downloads' filename='ba_reviews.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.0le9ljj0jr05zr1cp74kc06f4qvd' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='header' ordinal='0' />
              <column datatype='string' name='author' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='place' ordinal='3' />
              <column datatype='string' name='content' ordinal='4' />
              <column datatype='string' name='aircraft' ordinal='5' />
              <column datatype='string' name='traveller_type' ordinal='6' />
              <column datatype='string' name='seat_type' ordinal='7' />
              <column datatype='string' name='route' ordinal='8' />
              <column datatype='date' name='date_flown' ordinal='9' />
              <column datatype='string' name='recommended' ordinal='10' />
              <column datatype='string' name='trip_verified' ordinal='11' />
              <column datatype='integer' name='rating' ordinal='12' />
              <column datatype='integer' name='seat_comfort' ordinal='13' />
              <column datatype='integer' name='cabin_staff_service' ordinal='14' />
              <column datatype='integer' name='food_beverages' ordinal='15' />
              <column datatype='integer' name='ground_service' ordinal='16' />
              <column datatype='integer' name='value_for_money' ordinal='17' />
              <column datatype='integer' name='entertainment' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.0le9ljj0jr05zr1cp74kc06f4qvd' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Various&quot;'>
            <value>&quot;A219&quot;</value>
            <value>&quot;A319 / Boeing 747&quot;</value>
            <value>&quot;A319 / Boeing 787-9&quot;</value>
            <value>&quot;A319 / Boeing777&quot;</value>
            <value>&quot;A319/320&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 / Boeing 777&quot;</value>
            <value>&quot;A320 / Boeing 787&quot;</value>
            <value>&quot;A320 A350&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320, A380&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A321 / Boeing 777&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;B737-400 / A380 / A319&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B777-300ER / A320 / A380&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / A320&quot;</value>
            <value>&quot;Boeing 747 / A380&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777&quot;</value>
            <value>&quot;Boeing 747-400 / A320&quot;</value>
            <value>&quot;Boeing 767&quot;</value>
            <value>&quot;Boeing 777 200&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;Boeing 787&quot;</value>
            <value>&quot;Boeing 787 / A320&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-9&quot;</value>
            <value>&quot;Boeing 787-9 / A319&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='integer' name='[Calculation_5938559069577302016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; then [rating]&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Countries.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries.csv_D0BBE3886E7942E987692F173384EDB0]' role='measure' type='quantitative' />
      <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='date' name='[date_flown]' role='dimension' type='ordinal' />
      <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Place)' hidden='true' name='[Action (Place)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[place]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/alikamiloglu/Documents/My Tableau Repository/Datasources/ba_reviews+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/04/2024 02:57:15 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C' table='[Extract].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' type='table' />
            <relation name='Countries.csv_D0BBE3886E7942E987692F173384EDB0' table='[Extract].[Countries.csv_D0BBE3886E7942E987692F173384EDB0]' type='table' />
          </relation>
          <refresh>
            <refresh-event add-from-file-path='ba_reviews+' increment-value='%null%' refresh-type='create' rows-inserted='1282' timestamp-start='2024-11-04 14:57:15.783' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>header</remote-name>
              <remote-type>129</remote-type>
              <local-name>[header]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>header</remote-alias>
              <ordinal>0</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1179</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>author</remote-alias>
              <ordinal>1</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>722</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>825</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>3</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>content</remote-name>
              <remote-type>129</remote-type>
              <local-name>[content]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>content</remote-alias>
              <ordinal>4</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aircraft</remote-name>
              <remote-type>129</remote-type>
              <local-name>[aircraft]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>aircraft</remote-alias>
              <ordinal>5</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>traveller_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[traveller_type]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>traveller_type</remote-alias>
              <ordinal>6</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seat_type]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>seat_type</remote-alias>
              <ordinal>7</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>8</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>716</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_flown</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_flown]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>date_flown</remote-alias>
              <ordinal>9</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>recommended</remote-name>
              <remote-type>129</remote-type>
              <local-name>[recommended]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>recommended</remote-alias>
              <ordinal>10</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_verified]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>trip_verified</remote-alias>
              <ordinal>11</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>12</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_comfort</remote-name>
              <remote-type>20</remote-type>
              <local-name>[seat_comfort]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>seat_comfort</remote-alias>
              <ordinal>13</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cabin_staff_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cabin_staff_service]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>cabin_staff_service</remote-alias>
              <ordinal>14</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>food_beverages</remote-name>
              <remote-type>20</remote-type>
              <local-name>[food_beverages]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>food_beverages</remote-alias>
              <ordinal>15</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ground_service]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>ground_service</remote-alias>
              <ordinal>16</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_for_money</remote-name>
              <remote-type>20</remote-type>
              <local-name>[value_for_money]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>value_for_money</remote-alias>
              <ordinal>17</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>entertainment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[entertainment]</local-name>
              <parent-name>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</parent-name>
              <remote-alias>entertainment</remote-alias>
              <ordinal>18</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>19</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>20</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>21</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>22</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_D0BBE3886E7942E987692F173384EDB0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Aircraft (group)]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A319&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A320&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A321&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A380&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 747&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 747-400&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 777&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 777-200&quot;' />
            <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Various&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[none:Continent:nk]'>
          <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[none:seat_type:nk]'>
          <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[none:traveller_type:nk]'>
          <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[tmn:date:qk]' included-values='in-range'>
          <min>#2016-03-01 00:00:00#</min>
          <max>#2023-10-01 00:00:00#</max>
        </filter>
      </extract>
      <layout common-percentage='0.965151' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0348485' show-structure='true' user-set-layout-v2='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Countries.csv' id='Countries.csv_D0BBE3886E7942E987692F173384EDB0'>
            <properties context=''>
              <relation connection='textscan.0le9ljj0jr05zr1cp74kc06f4qvd' name='Countries.csv' table='[Countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Countries.csv_D0BBE3886E7942E987692F173384EDB0' table='[Extract].[Countries.csv_D0BBE3886E7942E987692F173384EDB0]' type='table' />
            </properties>
          </object>
          <object caption='ba_reviews.csv' id='ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C'>
            <properties context=''>
              <relation connection='textscan.0le9ljj0jr05zr1cp74kc06f4qvd' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='header' ordinal='0' />
                  <column datatype='string' name='author' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='place' ordinal='3' />
                  <column datatype='string' name='content' ordinal='4' />
                  <column datatype='string' name='aircraft' ordinal='5' />
                  <column datatype='string' name='traveller_type' ordinal='6' />
                  <column datatype='string' name='seat_type' ordinal='7' />
                  <column datatype='string' name='route' ordinal='8' />
                  <column datatype='date' name='date_flown' ordinal='9' />
                  <column datatype='string' name='recommended' ordinal='10' />
                  <column datatype='string' name='trip_verified' ordinal='11' />
                  <column datatype='integer' name='rating' ordinal='12' />
                  <column datatype='integer' name='seat_comfort' ordinal='13' />
                  <column datatype='integer' name='cabin_staff_service' ordinal='14' />
                  <column datatype='integer' name='food_beverages' ordinal='15' />
                  <column datatype='integer' name='ground_service' ordinal='16' />
                  <column datatype='integer' name='value_for_money' ordinal='17' />
                  <column datatype='integer' name='entertainment' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C' table='[Extract].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[place]' />
              <expression op='[Country]' />
            </expression>
            <first-end-point object-id='ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C' />
            <second-end-point object-id='Countries.csv_D0BBE3886E7942E987692F173384EDB0' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.070npzo1bfnjkx13od5jm009zfwq'>
      <datasources>
        <datasource caption='ba_reviews+' name='federated.070npzo1bfnjkx13od5jm009zfwq' />
      </datasources>
      <datasource-dependencies datasource='federated.070npzo1bfnjkx13od5jm009zfwq'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;A219&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 787&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A319&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A320&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A321&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;A380&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 747&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 747-400&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 777&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Boeing 777-200&quot;' />
          <groupfilter function='member' level='[Aircraft (group)]' member='&quot;Various&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]'>
        <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]'>
        <groupfilter function='level-members' level='[none:seat_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]' included-values='in-range'>
        <min>#2016-03-17 00:00:00#</min>
        <max>#2023-10-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.070npzo1bfnjkx13od5jm009zfwq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.070npzo1bfnjkx13od5jm009zfwq'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_5938559069577302016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; then [rating]&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5938559069577302016]' derivation='Avg' name='[avg:Calculation_5938559069577302016:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Boeing 747-400&quot;</bucket>
              <bucket>&quot;Boeing 747&quot;</bucket>
              <bucket>&quot;Boeing 777&quot;</bucket>
              <bucket>&quot;A320&quot;</bucket>
              <bucket>&quot;Various&quot;</bucket>
              <bucket>&quot;Boeing 787 Dreamliner&quot;</bucket>
              <bucket>&quot;A380&quot;</bucket>
              <bucket>&quot;A319&quot;</bucket>
              <bucket>&quot;Boeing 777-200&quot;</bucket>
              <bucket>&quot;A321&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' scope='cols' value='Overall Rating' />
            <format attr='title' class='0' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' scope='cols' value='Number of Reviews' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' scope='cols' value='#f28e2b' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='text-format' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#c8ddd5</color>
                <color>#a3cabc</color>
                <color>#81b7a3</color>
                <color>#64a48c</color>
                <color>#4a9177</color>
                <color>#347e63</color>
                <color>#216b50</color>
                <color>#13583e</color>
                <color>#08452e</color>
                <color>#013220</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f0e0e5</color>
                <color>#efd0d9</color>
                <color>#eec0ce</color>
                <color>#edb0c2</color>
                <color>#eca0b7</color>
                <color>#eb91ac</color>
                <color>#ea81a0</color>
                <color>#e97295</color>
                <color>#e8638a</color>
                <color>#e75480</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average  <[Parameters].[Parameter 1]>  <[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' />
              <tooltip column='[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average  <[Parameters].[Parameter 1]>  <[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Number of reviews: <[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#013220' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' />
              <tooltip column='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average <[Parameters].[Parameter 1]>: <[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Number of Reviews: <[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]</rows>
        <cols>([federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk] + [federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk])</cols>
      </table>
      <simple-id uuid='{4E4F2EA1-36F0-4C36-9F38-865BE87543CC}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.070npzo1bfnjkx13od5jm009zfwq' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.070npzo1bfnjkx13od5jm009zfwq'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_5938559069577302016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; then [rating]&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5938559069577302016]' derivation='Avg' name='[avg:Calculation_5938559069577302016:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[Longitude (generated)]' field-type='quantitative' max='-20890472.210850488' min='-57470196.760920629' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[Latitude (generated)]' field-type='quantitative' max='13607569.761012398' min='-998468.20516709378' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#c8ddd5</color>
                <color>#a3cabc</color>
                <color>#81b7a3</color>
                <color>#64a48c</color>
                <color>#4a9177</color>
                <color>#347e63</color>
                <color>#216b50</color>
                <color>#13583e</color>
                <color>#08452e</color>
                <color>#013220</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' />
              <lod column='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:place:nk]' />
              <tooltip column='[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]' />
              <geometry column='[federated.070npzo1bfnjkx13od5jm009zfwq].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.070npzo1bfnjkx13od5jm009zfwq].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Avgerage <[Parameters].[Parameter 1]>:  <[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Number of Reviews: <[federated.070npzo1bfnjkx13od5jm009zfwq].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_B451A4A442DF4FFD8BC4DACD499AEE1C:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.070npzo1bfnjkx13od5jm009zfwq].[Latitude (generated)]</rows>
        <cols>[federated.070npzo1bfnjkx13od5jm009zfwq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2D0D6633-FD18-4EB1-B564-73EAC83EBB50}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt;  By Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.070npzo1bfnjkx13od5jm009zfwq' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
              <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.070npzo1bfnjkx13od5jm009zfwq'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_5938559069577302016]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; then [rating]&#10;when &apos;Cabin Staff Service&apos; then [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5938559069577302016]' derivation='Avg' name='[avg:Calculation_5938559069577302016:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontcolor='#555555'><![CDATA[<[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#555555'><![CDATA[Average <[Parameters].[Parameter 1]> <[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#013220' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]</rows>
        <cols>[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{7735ECB4-197A-49F4-9A7E-F0CCDAFE8D68}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ba_reviews+' name='federated.070npzo1bfnjkx13od5jm009zfwq' />
          </datasources>
          <datasource-dependencies datasource='federated.070npzo1bfnjkx13od5jm009zfwq'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 787&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[seat_comfort]' derivation='Sum' name='[sum:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:ground_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:value_for_money:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:food_beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:ground_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.070npzo1bfnjkx13od5jm009zfwq].[sum:seat_comfort:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]</column>
            <column>[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]' value='144' />
            <format attr='text-format' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#013220' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.070npzo1bfnjkx13od5jm009zfwq].[Multiple Values]' />
              <text column='[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.070npzo1bfnjkx13od5jm009zfwq].[Multiple Values]>]]></run>
                <run><![CDATA[
<[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]>
]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9D330B9F-697C-4431-AA5B-245D06441172}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='700' maxwidth='1200' minheight='700' minwidth='1200' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='ba_reviews+' name='federated.070npzo1bfnjkx13od5jm009zfwq' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Overall Rating&quot;'>
          <calculation class='tableau' formula='&quot;Overall Rating&quot;' />
          <members>
            <member value='&quot;Overall Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Food&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.070npzo1bfnjkx13od5jm009zfwq'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;A219&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 787&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone forceUpdate='true' h='14286' id='3' type-v2='text' w='16667' x='0' y='0'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#013220' />
          </zone-style>
        </zone>
        <zone h='14286' id='4' name='Summary' show-title='false' w='84000' x='16167' y='0' />
        <zone h='38571' id='5' name='Map' w='47250' x='54583' y='14571' />
        <zone h='84000' id='12' param='vert' type-v2='layout-flow' w='16667' x='0' y='14571'>
          <zone h='20571' id='11' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16667' x='0' y='14571'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9857' id='6' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16667' x='0' y='35142'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='20571' id='7' mode='radiolist' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]' type-v2='filter' w='16667' x='0' y='44999'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='18143' id='8' mode='radiolist' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]' type-v2='filter' w='16667' x='0' y='65570'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7429' id='9' mode='dropdown' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]' type-v2='filter' w='16667' x='0' y='83713'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7429' id='10' mode='dropdown' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]' type-v2='filter' w='16667' x='0' y='91142'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='38571' id='13' name='Month' w='37083' x='18333' y='14571' />
        <zone h='44714' id='14' name='Aircraft' w='82167' x='18333' y='53857' />
        <zone h='85714' id='15' type-v2='empty' w='250' x='16667' y='14286'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#013220' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='18' param='vert' type-v2='layout-flow' w='98666' x='667' y='1143'>
                <zone forceUpdate='true' h='14286' id='3' type-v2='text' w='16667' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#013220' />
                  </zone-style>
                </zone>
                <zone fixed-size='100' h='14286' id='4' is-fixed='true' name='Summary' show-title='false' w='84000' x='16167' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20571' id='11' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16667' x='0' y='14571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='38571' id='13' is-fixed='true' name='Month' w='37083' x='18333' y='14571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9857' id='6' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16667' x='0' y='35142'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20571' id='7' mode='dropdown' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]' type-v2='filter' w='16667' x='0' y='44999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18143' id='8' mode='dropdown' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]' type-v2='filter' w='16667' x='0' y='65570'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7429' id='9' mode='dropdown' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]' type-v2='filter' w='16667' x='0' y='83713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7429' id='10' mode='dropdown' name='Map' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]' type-v2='filter' w='16667' x='0' y='91142'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='38571' id='5' is-fixed='true' name='Map' w='47250' x='54583' y='14571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44714' id='14' is-fixed='true' name='Aircraft' w='82167' x='18333' y='53857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89ECA8B3-ECBE-45B9-BE19-E34ACA323267}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.070npzo1bfnjkx13od5jm009zfwq].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:traveller_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:seat_type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]' type='filter' />
            <card mode='dropdown' param='[federated.070npzo1bfnjkx13od5jm009zfwq].[none:Continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.070npzo1bfnjkx13od5jm009zfwq].[dy:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{136A1271-6D5F-4C57-AA8F-35547736E1EE}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.070npzo1bfnjkx13od5jm009zfwq].[:Measure Names]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{012AEDC2-30E9-465D-ACD3-A70BC008E1E1}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.070npzo1bfnjkx13od5jm009zfwq].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0788F968-ABFF-474A-822D-D4BC2B830133}' />
    </window>
    <window class='worksheet' name='Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.070npzo1bfnjkx13od5jm009zfwq].[Aircraft (group)]</field>
            <field>[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99770907-F2ED-418A-8AB3-BAC897913C46}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Aircraft'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{ECB0E127-ED35-4647-A4F7-1AB91E6C198F}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='fca1533e-f4ac-4d10-8ad8-54ad73793ce2' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='fca1533e-f4ac-4d10-8ad8-54ad73793ce2' node-guid='d466a6f0-1d84-493b-b041-360212d8b986' />
        <pair execution-subgraph-guid='fca1533e-f4ac-4d10-8ad8-54ad73793ce2' node-guid='bec6b7f1-ed60-4a45-91e1-df2fc124289a' />
      </node-execution-subgraphs>
      <nodes>
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='c63bca45-c53d-4836-828a-87046440e727' node-guid='bec6b7f1-ed60-4a45-91e1-df2fc124289a' value-output-guid='fd4bc179-a723-48d5-bee2-f49c4c443119' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.070npzo1bfnjkx13od5jm009zfwq].[avg:Calculation_5938559069577302016:qk]' node-guid='d466a6f0-1d84-493b-b041-360212d8b986' orientation='horizontal' sheet-identifier='{4E4F2EA1-36F0-4C36-9F38-865BE87543CC}' title-input-guid='799da6c4-fb7b-4b8a-a189-8ec3bb4105cd' />
      </nodes>
      <edges>
        <edge from='fd4bc179-a723-48d5-bee2-f49c4c443119' to='799da6c4-fb7b-4b8a-a189-8ec3bb4105cd' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='158' name='Aircraft' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      jZ2dncYGn5ubi729PVu3bsXLy4u+ffsyZswYbG1tad26NTdv3qSsrIyjR49St25dPv/8c4YP
      H079+vWBimn/wYMHmTFjBl5eXkyZMoWgoKBK5ky5XK4ZnNzD1NRUY8bw9vYmJCQEQRAIDQ3F
      3d0dc3NzDh48yIgRI/Dx8WHmzJncvHlTY79PSEhg2LBhrF+/HicnJ6ZPn46vry9WVla4u7uT
      kJBQrX6NjY1l0aJFvPvuuwQEBDBx4kQkEgl16tRh4cKF1KlTh0aNGqGvr09aWhrDhg1DT0+P
      3r17884772BjY/PAdr/66ismTpxI3759KSgoQKFQcPDgQebNm8f48eMZPHjwYx3S2dnZLF68
      mK+//porV64waNAgZDIZ3t7eSKVSQkJCyMrKIiYmhp49e1apL5VK8fLyIiwsjNLSUi5dukTr
      1q0158vLyzl06BDz589n0KBBfPHFFyQnJ2v8A40bN2bJkiVMmjSJOnXqkJ+fT9++falZsybt
      27fnnXfeoV69egAYGRnxzTffMGHCBLy8vCgoKKjWc/ivofWgg6WlpWRnZ6OlpUXNmjXFFQci
      z4ykpCRu3LjB2rVr2bJlCzk5Oejo6KBUKmnRogUAMTExnDhxAi8vL3R0dMjNzSU8PJyhQ4cC
      FUqktLQUqLBbz5o1S2O3Xr9+Pbt378bT0xNBEFCr1ZpRsa2tbZV3WS6XU1payieffIKWlhaC
      IGBhYUFRUZHmo29paUlSUhKCIGgGI6mpqRgbG6Ojo0PXrl3ZsmULWVlZhIaGMnr0aNRqNXl5
      eWzcuJFdu3YBYGJiQlFREQDu7u4MGzYMiUSCUqlk4cKFJCUl0bx5c27fvl3tfTCGhobo6elx
      8eJFvvrqK9q2bQtAVFQUCxYsoEWLFlhaWqJSqZ5qj829+1YqlRQWFmJvb//EdWvVqqXpg6io
      KD766COcnZ1xcnKie/fu+Pv7U1hYiKurK46Ojg9so1OnTnz33Xd4eHjg6OhIjRo1NOdKSkoo
      LS3VyGRmZoahoWElB++/76M69/w6U0kBlJWVsXv3bnJzc7G2tkahUJCenk7Lli3p2LHjc+kQ
      tVqNVCrV/CvyehMWFkbdunWZOnUqUPEB/uSTT4iPj6dhw4a0b9+eI0eOEBkZyWeffYZEIsHO
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
      /w/QNbwYvq4icAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Month' width='384'>
      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
      AABgUgQAAEyKAACASREAADApAgAAJjUuA9DV1aWbN2/q9evXv+r3B4PB3/T1Gxoa3mcsAMMs
      FAqpvr5ed+/eVSAQ+NnXf2mpEj/Hv9+4C4DH41F1dbUSExPV2Ngo6e1/gh8+isIwDAUCAXm9
      XhmGoWAwqOrqavn9fklSIBCQz+eTYRgKhUJDvw4Gg0Pbnz59Kr/fP/QfzjAM+Xy+oV8Hg0GF
      QiE+4wgYYdXV1QqFQoqIiFB5ebkMwxj6eQyFQrp48aLcbvfQz77X6x064Hvy5MnQz7b00/1E
      KBQa+lnGz7OP9QB/z2KxyOv1ymKxaN26dQqFQiorK1NkZKRCoZCWL1+umpoazZgxQzExMUpK
      SlJDQ4OcTqfWrFmj6upqOZ1OLVy4UG1tberv71d7e7sSEhLU19enjRs3yuv16vTp0+rq6lJm
      ZqZaW1vV1NSkgYEB5ebmqqqqSoFAQBs2bNCcOXPG+p8EmJSCwaAGBga0cuVKSdLTp0/l9XpV
      U1OjiIgIzZw5Uw8ePFBvb69WrVqlx48fy+fzqaenR0VFRXK5XDp79qxcLpd27dql06dPy+Fw
      yO/3KyMjQ0ePHpXdbldOTo7i4uLG+G87Po27MwCn06ldu3bpyZMnOnLkiHp6euR2uzVjxgw1
      NzcrGAxq9erVys/Pl9vt1pIlS7RgwQJt27ZNjx49Unx8vJKTk/XgwQMFAgFlZmbqo48+0tq1
      a7V161Z1d3fL6XQqOztbubm5qq+v1/3795WUlKQpU6boxYsXcrvd2rFjBzt/YAT9cOT/A7vd
      LrfbrejoaGVnZ2v16tVKTU3V5s2bNXv2bPX39ysnJ0crVqzQy5cvlZCQoKysrKFft7S0aMaM
      GXK5XPJ4PPL5fNqzZw87/zDG3RmA3+9XKBTStm3bdOLECYVCITkcDs2ZM0fTp0//0e/721M/
      SUNnCSkpKZo9e7bu378f9nu1t7crLi5OLpdLiYmJmj17tqKiovTq1StFRUWN3F8SgOx2u/r7
      ++XxeGS1WtXT06OYmBgNDAwMXcKR3p4pWCyWoUu4vb29SkpKGvo6LpdLqampcjqdmjNnjhIS
      EhQREaGkpKShj63Hz7P9+c9//vNYD/G3gsGgzp07p4cPH2r27NlatGiRvF6vGhoa1N/fr2nT
      pqmurk6tra3asGGDYmJi1NnZqfr6eq1fv16PHz9WY2OjoqKiFBsbqxkzZigYDGrKlCmKiIiQ
      1WqVzWbTnTt3NDAwoHXr1ikxMVHXr19XW1vb0FH/rFmzxvhfApjcLBaLkpOTVVtbqydPnmjL
      li2Kj4/X4OCgbty4IavVqrlz5+rcuXOKiYlRQkKCLl68KKvVqlWrVqmlpUUPHjxQXFycli5d
      KovFoocPH6qvr09z585VIBBQYmLiWP81x7UJ92mgzc3NevPmjVasWDHWowDAhDbhAvDDuH/7
      hDIAwG837t4DeBd2/AAwPP4/34uGTGjF9oAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='116' name='Summary' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAB0CAYAAACMs+UEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYvklEQVR4nO3dZ1gUV9sH8D+7K01FelEsNIHQREAgIApKESxgwBCxl1hjNCoa9bFHjY+J
      GkuM+phXNImi2FAsiAUrCqggNkTEjiAgve6+H5CN6xY6uzL377r44DlnZu4Zd+eeOefMrByP
      x+OBEEII47CkHQAhhBDpoARACCEMRQmAEEIYihIAIYQwFCUAQghhKEoAhBDCUJQACCGEoTi1
      NWDZGbREHIQQQloY3QEQQghDUQIghBCGogRACCEMRQmAEEIYihIAIYQwFCUAQghhKEoAhBDC
      UJQACCGEoSgBEEIIQ1ECIIQQhqIEQAghDEUJgBBCGIoSACGEMBQlAEIIYShKAIQQwlCUAAgh
      hKEoARBCCENRAiCEEIaiBEAIIQxFCYAQQhiKEgAhhDAUJQBCCGEoSgCEEMJQlAAIIYShKAEQ
      QghDUQIghBCG4kg7ACK72Cw2lBQVJLbh8YCikuIWikgyOTk5WJuYwcnKFjrqmtBU04C2ugba
      cDhIf/kcqc/S8SgjHanP0/HybSZ4PJ60QyZEqigBELH+O2sBZg4fJ7HNq6xM6Ps4tVBEonk6
      umK4rz+8nHpDT1O7TsukPnuKhVvW4uDZk80cHSGyS45Xy2UQy86gpWIhMsTSqDsS/4kCh82W
      2E5aCYDFYiHA3Rvzx06BnblVg9cTd/c25m1cjdjEG00YHSGfBxoDICJtDF1a68lfWswNjHF5
      10EcWLu1USd/AHC07IELO/ZjhK9/E0VHyOeDEgARMszTD+72ztIOQ6T5Y6Yg8e8TcLKybdL1
      /r7gJ3xhaNKk6yRE1lEXEBHQVkkZ9yNioK+jW6f2Ld0FVBaXijacug1d8Xg8ZOXmQFFBASpt
      29Xa/n76YziOGoLCYtkY1CakudEdABHw47ipIk/+K3dulkI09cPj8RCbeAPjl4XCbKgHlL80
      g66nPVTdrKDpbouBM8bh8u14scubGxhj3pgpLRgxIdJFdwCEz7hzVySHn4GCvLxAeeqzp7Aa
      5oXS64+ElpGFO4CKykpsCQ/Dlv1hSHuRUes6gr0HYe/KDWCxhK9/Up89hWmAe5PFS4gsozsA
      AgAY2NsDj45cEDr5H790DqYB7iivqJBSZKLlFeRj2LypYNkZQMHRBD/8sqJOJ38A2Hc6EvKO
      JiK7eky6dIODhXVTh0uITKIEQKAgL4/1cxYLlZeVl2PWuuVSiEg8Ho+H+HvJsAsZ2Kg5/Fwu
      F7cf3RNZp6Wq0eD1EvI5oQfBCOaM/BZG+l2Fytft2V7nq+qW4jNtFK4mJTTJHUlFpeh15Ba8
      b/S6CfkcUAJguM46evhx3FSh8ueZr7F611YpRCTZhYTrTbIeNosNSyNTkXUPnz5pkm0QIuuo
      C4jh1v2wCMqKSkLlc9f/hOLSEilE1DKmDRsJLTV1ofLsvFzk5OdJISJCWh4lAAbzcPgSQf19
      hcrPx19DePQJKUTUMky7GmL51Nki624/FD0uQEhrRAmAoThsNn4LXSpUXllVhe/XCpe3FtYm
      Zri4M1zsg2Grd21p4YgIkR5KAAz1XfAYka8+2BIehrtpwvP9W4MBLn1xfvs+aKuLnuVz+los
      zsdfa+GoCJEeGgRmIB11TSyZNFOo/G3OOyzdtl4KETWvNhwOVk6bizkjJ0JOTk5km+LSEszb
      uLqFIyNEuigBMNCa7+eL7AJZsHkt3hcWSCGi5mPSpRv2rNyAXhY2YtuUlpdhyKyJSEp90IKR
      ESJ91AXEMM7WPTHKb6hQ+Y2UO/jz2AEpRNR8pgaNxK1/oiSe/MsrKvDVnMmIuXGlBSMjRDbQ
      HQCDsFgsbJq3TKgbhMfj4bufF7ean0jsqKWD/y1ZC29nN4ntsvNyEbJgBqLjLrdQZITIFroD
      YJCJAcHoaWYpVL7raDhupiRJIaKm97XXQCSFn6r15H/5djxsv/Glkz9hNLoDYAh1FVWsnDZH
      qDyvIB8LNq+VQkRNi81i45fZizAjeIzEdjweD2t3/4H/bF2HyqqqlgmOEBlFCYAhVkybDY0O
      akLlS7b9iqzcHClE1HQ6tGuPf1Zvgs+XfSS2e5H5BuOWzcHZOOrvJwSgBMAItqYWmDR0uFB5
      8uOH2Bq+VwoRNR3DTl0QufF/MDcwlthub9QRzFi7BHkF+S0UGSGyjxJAKycnJ4ff5i0V+eMn
      Ry9Eo699437MRUFeHv16uQiVJ9xPbvaTbVe9Tri2+7DId/rUyM7LxZRVCxER0/BXRxPSWtEv
      grVyI3z9Ebai5R/u6jvxa8Qm3mi29SvKK+DSrgOwM7cS2+bU1YsYu2QOMnOymy0OQj5nNAuo
      lQvw8JF2CM1i8/zlYk/+PB4PK3duxsDvx9HJnxAJqAuINIvmfKZgYkAwxg0ZJrKutLwMw3+c
      gSMXzjTb9glpLegOgHxWFOUVsHrGPJF1XC4XIxbOpJM/IXVEdwCt3NXbCehj59gk61JXURVZ
      LuoHVJprjn2w9yCxcfzwywocOneqWbZLSGtEg8CkzrgJ6UJlr7Iyoe/TuJlE9REXdhQOFtZC
      5Zdu3USfCaK7hQghotEdAGkxhp26wNGqh8i61GfpiL+XLHF5BwtrkSd/AJj/25pGx0cI01AC
      IC2mr70Tdi7+WWTd7wf31poAvuon/POVQPUTvteSEhsdHyFMQwmAfDa66nUSWa6vo4vlU0T/
      xm9DXEy4Tq+HJoxACYB8NrrodhRbt2jC9CbdFiUAwgQ0DZR8NiQlAEJI/VECIJ8FDpsNPU1t
      aYdBSKtCCYB8FrTVNUW+0I4Q0nD0jSJ19uZdllBZfd61k/lOfNu3EuoAoKikGKXlZXXeVmO8
      zRHeT0JaI3oQjBBCGIruAAghhKEoARBCCENRAiCEEIaiBEAIIQxFCYAQQhiKEgAhhDAUJQBC
      CGEoSgCEEMJQlAAIIYShKAEQQghDUQIghBCGogRACCEMRQmAEEIYihIAIYQwFCUAQghhKEoA
      hBDCUJQACCGEoSgBEEIIQ1ECIIQQhqIEQAghDEUJgBBCGIoSACGEMBQlABlzcvNucBPSwU1I
      x9+rfpN2OI3231kL+Psj6i/tWCzG+38NDpvdpNvV09RGD9Mvam23ctoccBPSsWnesibdPpF9
      Tla2Ap9F066G0g6p0dopKyP8561iv2/Xdh8W+K5xpBgr+YRGBzX06+WCiwlx6Kilg4G9+0FJ
      QRElZaXSDq3R1vzf77ib+hAAwOGw0VFTBz3MLDDUwwc7/rMGduZWmLp6UZNtb8fiNfB1cQfb
      3hA8Hk9su9SMdJy8cgHxKUlNtm3yeQjy9AMA7Di8DxMDgjHM0w8rdm6SclQNZ9CpM46t3wkL
      o+64m/YIu48dxJU78SgrL4dpN0NMDhwBt569wGazUVlVBYASgEzxd/cCh81G+Jnj6KSjiwXj
      psHX1R0RMSelHVqjnbpyAbGJN4TKTbp0w8Wd4ZgcGIKoy+dw/NK5JtmeHOTq1G738QjsPh7R
      JNsknw85OTkE9vfF6+y3CN2wCqP8hiLIa+BnnQC2LVwFC6PuOHLhDEYumoWikmJ+3a2HKdh3
      OhJuPXuhorKSX05dQDIkyNMPXC4Xh86dQsTZk/yy1iz12VNMXVV95e/p5CblaAhTOFnZorOO
      Hg6dO4X3hQU4fS0WlkbdYW5gLO3QGsTd3hmejq64/fAeAudOETj5fyw28Qa4XC7/33QHICM0
      VdXg4fAlLt26icycbGTmZCPtRQb8XN2hrKiE4tISgfZm3Yww45uxuJlyB38eOyB2vWMGBaKX
      ZQ8s374Rb95lCdRx2GxMDPgGrrYOsDQ2BZvFwvPM1zh/8yoy32VDSVER2w7+1Sz7+7GLiXEA
      AFszC6E6485d8Y33YPQ0t4K+ji7UVVTx7M0rJD64i//u/kNgn5QUFPHLD9XJxMKoOwBgy/wV
      AusrLS/DD7/8W9bTzBITAoKxN+owrt5JEGjby8IGYwYHYefhfch4/RKTvhoORytb9DSzgKKC
      ApJSH2Dx1l9x5U68yP2SleNLhNVcWNVcaEXERGFwn/4I6u+L5TuEx97mjJwIQ/2uWLLtV2Tl
      5ohcp6aqGpZPmY3E+8nYeWS/QJ2FUXdMCAiGlbEpuup1QlZuDu6nP8axi9HwcnbD4q2/4t37
      3Abvz+JvvwcALN++UeAEXxtKADIiwN0bHDYbETFR/LKImFMIHT0Jvq59cfCsYDfQ88zXGOEb
      gKEePthz4hC/T+9jbBYbq2fMQxsOBzPXCQ5yWhh1x96VG2DT3Rw8Hg9PX73Am3dZsDW1gLdz
      9ZX4rqPhAJr/BKUorwAAQlctvW0dcHFnOACgorIST14+Q3ZeLiyNu6OPnSPG+38NrykjcCPl
      DgBAQV4ekwNDBNbx6b9z898LJABD/c6YHBiChPvJQgnApIsBJgeGwMzACHbmVmiv3BYlZaVI
      fvwQpl0N4W7vjLPb/oJNsA8eZaQLLCtLx5cIkpOTQ2A/X7zNeYfYW9XdkscunkV5RQWCPP1E
      JoC2SsqYHBiC++mp2LRvt8j1BnsPwuTAEIRuWCVQvnTyLPw4diracDgoLC7Gszcv0U65LUb6
      DcXYwUEAgDW7tuLd+4bvTy9LG6S/fI6jF6PrtSx1AcmIQE8/8Hg8RMSc4pcdPHsCABDkOVCo
      fVFJMSLOnYS2ugb6O7qKXKenkyt01DWx73Qkyisq+OUK8vI4sHYrbLqbIzz6BPR9nGA02A0u
      Y7+Crqc9vKaOaOK9k2yQWz8AwPWkRIFyHo+H45fOYcisCWjnYg7zof3gOGoI9DwdsGz7Rqi0
      bYetC1by2+cV5IPjYASOgxFOXrkAAGjjYMwv4zgYQdPDtt7x9bVzQlzybXh8+w1U3azgNMof
      up722H7oHyjIy2Ok31CB9rJ2fIkgZ+ue0NfRxeHzp/lXy+8LCxAddwkWRt3xhaGJ0DJhJw6B
      x+Nh+AB/sesN8Q1AFbcKe6OO8MtGDRyKxRNnICc/D8MXzEAHN0tYBnnBepg3tDxsEXXlfKP3
      R19bF0oKikh5kipxwoMolABkgKaqGtztnXHlTgJeZ7/ll8ffS8bTVy/43UCfCousHrwU96Gs
      Kd8deVCgfP6YKTDrZoR/Th1D8PzpAtsEgHtPHjdqf+rD29kN6+csRklZqdBg9+Xb8Rg8czwi
      Y2MEBq4qq6qwetcW5OTnoaeZJdRUOvDruFyuwC0wl8fll3G53Hp/QQDgh19WwGvqCFxIuM6P
      o6y8HJv2/R8AwLBTF4H2snR8ibCa7p+DZ6MEyiWNu6W/fI5Lt27C0bIHjDt3Fao37twVjpY9
      cPpaLL9bUk2lA36d/R+UV1TAc3II9p2OFPj8vS8swMu3mY3eH5MuBgCAx8+f1ntZSgAyYKiH
      T3X3zycfSACIOHcSyopK8HN1F6q7kHAdGa9fIsDdSyhBtFVSRoC7F+6nP8bNT6Y4ejm7obS8
      DDPWLm3S/ZBkSF8vTA0aialBIzFz+Dism7UQ18OO4OTm3VCUV8D4ZaG4m/aozusrr6jg3y11
      09NvrrABAC/fvhFZnvY8AwDA/uQZBmkcX1I31d0/A5Cdl4sL8dcF6o5ejEZFZSWC+vuKXDbs
      w2yxEBEXXDVlNRdlAODwhTXUVVSx8Z8/6/XZri8tNXUAQE4DxhBoDEAGBNV0/5wTnu4ZcfYk
      Zo+YiCDPgTjwSYLg8XjYc+IwFk2YDv++Xvj71FF+nX9fL7RVUuZ/aD9mYdQdKWmPGjXoVF+z
      QsYLlXG5XBy5cAYrtv+GWw9TxC5r3Lkr/Fw9oK+rBz1Nbchz5AEA5gZGAKqfK5Al0ji+pG5c
      bOzQSVsXO4/sRxVXcNwsN/89zt28Cm9nN/7/4ccORJ/Ab6FL8Y3PECzbvlGgbvgAf+QV5Av0
      wVsamwIALn2Y5NBcnr15BQDorNup3stSApAyLTV19LV3QllFOZZOmiVULydXPZ/d17Uv2iop
      Cw2U7jkRgUUTpmO47xCBBDB8wBBUcauw58Rhgfaq7VWg0rYdHn+4em0ps9YtR1LqA2iqqmH7
      f9agQ7v2WLB5Ldbu/kPsMhw2G2Er1iPYexAAoKSsFG+ys/gPxmmpabRI7PUhreNL6ibwQ/eO
      haEJdi7+WajeSL+6eyfI008oARQUF+Hw+dMIGeAPBwtr/p11LwsbmHTphm0H/0JZeTm/fWfd
      jgDQ7J+FtBfV6zfs1Lney1ICkLKhHj5gs9hgy7Mxbsgwse2UFZUwsLcH9p85LlCe+uwprt5J
      gJeTG7TU1JGVmwNtdQ14OvXG2bgreJUl2MeYX1SI8ooK6GhoNsv+iHPrYQr/QbBnb17h1JYw
      rJkxHyVlpWJnVfwWugzB3oNwPv6ayOmWiyZMx/Ips5s99vqQ1vEltWOxWAjsNwBA9UCws3VP
      sW2D+vti6bb1QuVhkREIGeCP4QP8+QkgxDeguu6Tu+3sD9NFdTQ08eBpWpPsgyhvc96hoLgI
      tmYWIi8SJaExACmrGXCyCPSEqpuVyL+aWSOBEvomOWw2hn2YLRTsNQgcNlto8Beo7nZJe5EB
      GxNztFNWbqa9kizu7m34TBuF/KJCbJy7FD+MmCDUhsViIdh7EB5lpMP3uzFi59rXpuYOqqXI
      wvElornY2KGjlg72nDgs9rum6maFczevwtzAGJYfniX5WMzNq3j59g2CvQeBzWKDw2bja6+B
      eJjxBNeTbwm0TX1WPTXYtYdDs+/b8dgYqKuoYson055rQwlAirTVNdDHzhE3U5JwP/0x8osK
      Rf7F3LiKV1mZ8HV1F3lSCY8+gdLyMoT4Vg9EDff1x/vCAhw5f0bkdqPjLkNNpQOWTJopsr5b
      x+YdVAUEk8C6WQsROnqSQH1nHT2otlfBvfRUgdvqj0l63UPhh6sgHfWWvxKXheNLhNVMp95/
      OlLsdy2/qBAHoj9Mv/YSnn7N5XKxJ+owdNQ10d/RBZ5OvaGtriEw+Fvj8u14lJSVYu7oSeio
      pSNUz2Gzoa+t2yT7tnz7RlRxqzB71LfQ09Su83KUAKSopvunZr6/ODXPBygpKGJg735C9XkF
      +Th28SycrGwxwKUvelnYYP+Z4ygtLxO5vp92bkJ+USFmj5iIsBXrYf+FFVTbq8DBwhp/LFqN
      S/8T/WSxorwCQkdPQujoSejUBB/c68m3+ElgzYz5WDBuGr/udfZbVFZVwcupNzq0ay+wnIK8
      PEJHT8LsUd+KXXfNlLgAd+9Gx1lfDT2+pPmwWCx81c8HeQX5OHvjssS2h8+fRhW3SuxsoD3H
      DwGoHvgN8fX/kBQOCbV7lZWJDX/vgkrbdkj4+zhCBvijs44edDW0MHZwEJIPnMEAl74it9Gv
      lwtCR0/CsDq+CuZhxhPsjToCHXVNxIUdhU13c6E2HbV08NP0uWCz6G2gMoE/H7kOL3uLiInC
      d8GjEeTph32nI4XqwyIjMMzTD38uXVf9bwkvOMvKzcHgmeOxZ+UGjPD1xwjff6e1VVRWYv+Z
      4/yB148pKyphzYz5AIBbD1LETo+sj+vJtzBg+mic2hKGldPmoA2Hg2XbN6K8ogLHLkZjqIcP
      Lu06iP2nI5H2IgPO1nYY3Kc/uup1QkFxkdj1/n3yKOaOmoQNc5fA390bkbHRkIMcephZYNzS
      uY2OW5KGHl/SfFx72ENPUxthxw8JPBQpytucd4hNvAF3e2dYm5ghKfWBQH3N1OoAd2+wWHKI
      uXkVLzJFfxdW7tgEtfYdMDkwBHtWCo4p3HuSirtpj0R2NQ3u44nvgkfj6p0EhEdLvkCsMfmn
      BeDxeBgzKBBxYUcRd/c2riUloryiAmbdjDDIrR8U5OWr7xbK6W2gUtWhXXv06emIxAd3kf7y
      ea3tL9+Ox5t3WfD5sg/acDgCD0YB4D+AoquhxR8YliQ28QZsvvaBn6sHbEy/gFp7FaQ9z8C+
      M5GoqKwUeYKqrKoEj8erV796TZyfxvuxa0mJGDB9NE5u3o0lk2aiqKQY6/bswJRVC9GhXXv0
      6+UCy6nVg71cLhe3Hqbg2xXz4WBhg5XT5ohcZ0raI4xdMgcbQ5egv6ML+ju6AIDQQ1n/xif+
      pCAudh544PF4IpdtyPElzWdQn/4AIPCqFUkORkfB3d4Zg9z6CyUAoPoCq+Y3JHYfEx5rq1FS
      Voqpqxch7HgEXGzsYWZghMKSYlyMv47I2Bj8vvAnkQlA0udRnLLycoxbOhfxKUkYH/A1nK17
      orftv+MPj59n4K+owwKfZzleLY9GsuwM6h0IkY4vDE2g0UEVmTnZQu+mqY8vbexweddB/LJ3
      B+auX1X7As3M2sQMZt2MkF9UiGtJiXhfWFDnZZUVlWBuYAxdDS1k5b7DndT7YscUWoqsHV9S
      f22VlNHzw8sLb6TcafBn6vTWPejfywWqblYS72gbQklBEabdDKGsqISnr14IzQgE6A6gVbn3
      JLVJ1jPUwwcAcOfhvSZZX2MlpT4QeRVWF8WlJUi4n9zEETWOrB1fUn9FJcW4dOtmo9bRSVsX
      jpY98OTlsyY/+QPVdx+3a/mM/T/fJhIxRP0BnwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
